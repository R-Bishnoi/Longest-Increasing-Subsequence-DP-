
//memoization

class Solution{
    public:
    
 int solve(vector<vector<int>>&dp ,vector<int>&arr,int i,int prev,int n) {
  if(i==n)return 0;

  if(dp[i][prev+1]!=-1)return dp[i][prev+1];
  
  int take=0,not_take=0;
     
  if(prev==-1 || arr[i]>arr[prev]){
      take=1+solve(dp,arr,i+1,i,n);
  }
  
    not_take=0+solve(dp,arr,i+1,prev,n);  

  return dp[i][prev+1]=max(take,not_take);
     
 }

  
int lengthOfLIS(vector<int>& arr){
        int n=arr.size();
    vector<vector<int>>dp(n,vector<int>(n+1,-1));

    return solve(dp,arr,0,-1,n);
       
    }
};

